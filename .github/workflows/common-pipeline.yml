name: Common workflow

on:
  workflow_call:
#    inputs:
#      config-path:
#        required: true
#        type: string
#    secrets:
#      token:
#        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      apiVersion: ${{ steps.build.outputs.pomVersion }}
    steps:
#    - uses: actions/labeler@v4
#      with:
#        repo-token: ${{ secrets.token }}
#        configuration-path: ${{ inputs.config-path }}
    - run: echo "The job was automatically triggered by a ${{ github.event_name }} event"
    - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - name: Get version from pom
      id: pom-version
      run:  |
        pomVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - name: Export version
      id: publish-version
      run:  echo "apiVersion=$pomVersion" >> $GITHUB_OUTPUT	
    - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Check out repository code
      uses: actions/checkout@v4
    - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "The workflow is now ready to test your code on the runner."
    - run: echo "The version is " 
    
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - run: echo "This job's status is ${{ job.status }}."

  DeployDev:
    name: Deploy to DEV
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: DEV
      url: 'http://dev-api.copeland.com'
    steps:
      - name: Deploy to DEV $API_VERSION
        env:
          API_VERSION: ${{ needs.build.outputs.apiVersion }}
        run: echo Deploying to DEV environment version ${{ API_VERSION }} ...
      - run: echo "This job's status is ${{ job.status }}."

  DeploySit:
    name: Deploy to SIT
    runs-on: ubuntu-latest
    needs: [DeployDev]
    environment:
      name: SIT
      url: 'http://sit-api.copeland.com'
    steps:
      - name: Deploy to SIT
        run: echo Deploying to SIT environment...
      - run: echo "This job's status is ${{ job.status }}."

